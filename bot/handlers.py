from aiogram import Router, types, F
from aiogram.filters import Command
from utils import is_authorized, update_chat_ids
import config

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    if is_authorized(user_id):
        await message.answer("‚úÖ –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ —ñ –±—É–¥–µ—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∑–∞—è–≤–∫–∏.")
    else:
        await message.answer("üîí –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø—É:")


@router.message(F.text)
async def check_password(message: types.Message):
    user_id = message.from_user.id
    text = message.text.strip()

    if is_authorized(user_id):
        await message.answer("‚úÖ –í–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ.")
    else:
        if text == config.ADMIN_PASSWORD:
            update_chat_ids(user_id)
            await message.answer("üéâ –ü–∞—Ä–æ–ª—å –≤—ñ—Ä–Ω–∏–π! –í–∏ –¥–æ–¥–∞–Ω—ñ –¥–æ —Å–ø–∏—Å–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—á—ñ–≤ –∑–∞—è–≤–æ–∫.")
        else:
            await message.answer("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
